# Generated by carnix 0.9.8: carnix generate-nix --src ./.
{ lib, buildPlatform, buildRustCrate, buildRustCrateHelpers, cratesIO, fetchgit }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
rec {
  crates = cratesIO // rec {
# orizentic-0.1.0

    crates.orizentic."0.1.0" = deps: { features?(features_.orizentic."0.1.0" deps {}) }: buildRustCrate {
      crateName = "orizentic";
      version = "0.1.0";
      authors = [ "Savanni D'Gerinel <savanni@luminescent-dreams.com>" ];
      src = exclude [ ".git" "target" ] ./.;
      libPath = "src/lib.rs";
      crateBin =
        [{  name = "orizentic";  path = "src/bin.rs"; }];
      dependencies = mapFeatures features ([
        (cratesIO.crates."chrono"."${deps."orizentic"."0.1.0"."chrono"}" deps)
        (cratesIO.crates."clap"."${deps."orizentic"."0.1.0"."clap"}" deps)
        (cratesIO.crates."itertools"."${deps."orizentic"."0.1.0"."itertools"}" deps)
        (cratesIO.crates."jsonwebtoken"."${deps."orizentic"."0.1.0"."jsonwebtoken"}" deps)
        (cratesIO.crates."serde"."${deps."orizentic"."0.1.0"."serde"}" deps)
        (cratesIO.crates."serde_derive"."${deps."orizentic"."0.1.0"."serde_derive"}" deps)
        (cratesIO.crates."serde_json"."${deps."orizentic"."0.1.0"."serde_json"}" deps)
        (cratesIO.crates."uuid"."${deps."orizentic"."0.1.0"."uuid"}" deps)
        (cratesIO.crates."yaml_rust"."${deps."orizentic"."0.1.0"."yaml_rust"}" deps)
      ]);
    };
    features_.orizentic."0.1.0" = deps: f: updateFeatures f (rec {
      chrono = fold recursiveUpdate {} [
        { "${deps.orizentic."0.1.0".chrono}"."serde" = true; }
        { "${deps.orizentic."0.1.0".chrono}".default = true; }
      ];
      clap."${deps.orizentic."0.1.0".clap}".default = true;
      itertools."${deps.orizentic."0.1.0".itertools}".default = true;
      jsonwebtoken."${deps.orizentic."0.1.0".jsonwebtoken}".default = true;
      orizentic."0.1.0".default = (f.orizentic."0.1.0".default or true);
      serde."${deps.orizentic."0.1.0".serde}".default = true;
      serde_derive."${deps.orizentic."0.1.0".serde_derive}".default = true;
      serde_json."${deps.orizentic."0.1.0".serde_json}".default = true;
      uuid = fold recursiveUpdate {} [
        { "${deps.orizentic."0.1.0".uuid}"."v4" = true; }
        { "${deps.orizentic."0.1.0".uuid}".default = true; }
      ];
      yaml_rust."${deps.orizentic."0.1.0".yaml_rust}".default = true;
    }) [
      (cratesIO.features_.chrono."${deps."orizentic"."0.1.0"."chrono"}" deps)
      (cratesIO.features_.clap."${deps."orizentic"."0.1.0"."clap"}" deps)
      (cratesIO.features_.itertools."${deps."orizentic"."0.1.0"."itertools"}" deps)
      (cratesIO.features_.jsonwebtoken."${deps."orizentic"."0.1.0"."jsonwebtoken"}" deps)
      (cratesIO.features_.serde."${deps."orizentic"."0.1.0"."serde"}" deps)
      (cratesIO.features_.serde_derive."${deps."orizentic"."0.1.0"."serde_derive"}" deps)
      (cratesIO.features_.serde_json."${deps."orizentic"."0.1.0"."serde_json"}" deps)
      (cratesIO.features_.uuid."${deps."orizentic"."0.1.0"."uuid"}" deps)
      (cratesIO.features_.yaml_rust."${deps."orizentic"."0.1.0"."yaml_rust"}" deps)
    ];


# end

  };

  orizentic = crates.crates.orizentic."0.1.0" deps;
  __all = [ (orizentic {}) ];
  deps.ansi_term."0.11.0" = {
    winapi = "0.3.5";
  };
  deps.atty."0.2.10" = {
    termion = "1.5.1";
    libc = "0.2.42";
    winapi = "0.3.5";
  };
  deps.base64."0.9.2" = {
    byteorder = "1.2.3";
    safemem = "0.2.0";
  };
  deps.bitflags."1.0.3" = {};
  deps.byteorder."1.2.3" = {};
  deps.cc."1.0.31" = {};
  deps.cfg_if."0.1.4" = {};
  deps.chrono."0.4.4" = {
    num_integer = "0.1.39";
    num_traits = "0.2.5";
    serde = "1.0.69";
    time = "0.1.40";
  };
  deps.clap."2.32.0" = {
    atty = "0.2.10";
    bitflags = "1.0.3";
    strsim = "0.7.0";
    textwrap = "0.10.0";
    unicode_width = "0.1.5";
    vec_map = "0.8.1";
    ansi_term = "0.11.0";
  };
  deps.dtoa."0.4.2" = {};
  deps.either."1.5.0" = {};
  deps.fuchsia_zircon."0.3.3" = {
    bitflags = "1.0.3";
    fuchsia_zircon_sys = "0.3.3";
  };
  deps.fuchsia_zircon_sys."0.3.3" = {};
  deps.itertools."0.7.8" = {
    either = "1.5.0";
  };
  deps.itoa."0.4.1" = {};
  deps.jsonwebtoken."5.0.1" = {
    base64 = "0.9.2";
    chrono = "0.4.4";
    ring = "0.13.5";
    serde = "1.0.69";
    serde_derive = "1.0.69";
    serde_json = "1.0.22";
    untrusted = "0.6.2";
  };
  deps.lazy_static."1.3.0" = {};
  deps.libc."0.2.42" = {};
  deps.linked_hash_map."0.5.1" = {};
  deps.num_integer."0.1.39" = {
    num_traits = "0.2.5";
  };
  deps.num_traits."0.2.5" = {};
  deps.orizentic."0.1.0" = {
    chrono = "0.4.4";
    clap = "2.32.0";
    itertools = "0.7.8";
    jsonwebtoken = "5.0.1";
    serde = "1.0.69";
    serde_derive = "1.0.69";
    serde_json = "1.0.22";
    uuid = "0.6.5";
    yaml_rust = "0.4.0";
  };
  deps.proc_macro2."0.4.6" = {
    unicode_xid = "0.1.0";
  };
  deps.quote."0.6.3" = {
    proc_macro2 = "0.4.6";
  };
  deps.rand."0.4.2" = {
    fuchsia_zircon = "0.3.3";
    libc = "0.2.42";
    winapi = "0.3.5";
  };
  deps.redox_syscall."0.1.40" = {};
  deps.redox_termios."0.1.1" = {
    redox_syscall = "0.1.40";
  };
  deps.ring."0.13.5" = {
    untrusted = "0.6.2";
    cc = "1.0.31";
    lazy_static = "1.3.0";
    libc = "0.2.42";
  };
  deps.safemem."0.2.0" = {};
  deps.serde."1.0.69" = {};
  deps.serde_derive."1.0.69" = {
    proc_macro2 = "0.4.6";
    quote = "0.6.3";
    syn = "0.14.4";
  };
  deps.serde_json."1.0.22" = {
    dtoa = "0.4.2";
    itoa = "0.4.1";
    serde = "1.0.69";
  };
  deps.strsim."0.7.0" = {};
  deps.syn."0.14.4" = {
    proc_macro2 = "0.4.6";
    quote = "0.6.3";
    unicode_xid = "0.1.0";
  };
  deps.termion."1.5.1" = {
    libc = "0.2.42";
    redox_syscall = "0.1.40";
    redox_termios = "0.1.1";
  };
  deps.textwrap."0.10.0" = {
    unicode_width = "0.1.5";
  };
  deps.time."0.1.40" = {
    libc = "0.2.42";
    redox_syscall = "0.1.40";
    winapi = "0.3.5";
  };
  deps.unicode_width."0.1.5" = {};
  deps.unicode_xid."0.1.0" = {};
  deps.untrusted."0.6.2" = {};
  deps.uuid."0.6.5" = {
    cfg_if = "0.1.4";
    rand = "0.4.2";
  };
  deps.vec_map."0.8.1" = {};
  deps.winapi."0.3.5" = {
    winapi_i686_pc_windows_gnu = "0.4.0";
    winapi_x86_64_pc_windows_gnu = "0.4.0";
  };
  deps.winapi_i686_pc_windows_gnu."0.4.0" = {};
  deps.winapi_x86_64_pc_windows_gnu."0.4.0" = {};
  deps.yaml_rust."0.4.0" = {
    linked_hash_map = "0.5.1";
  };
}
